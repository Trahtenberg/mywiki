Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-06-04T11:05:36+03:00

====== vue router ======
Created вторник 04 Июнь 2019

this.$router - маршрутизатор
this.$route - маршрут
computed: this.$route.params.username
methods: goBack(): window.history.length

если: router = new VueRouter()
то: this.$router == router

router = new VueRouter() - по умолчанию работает в режиме хэша
router = new VueRouter(mode:history) - работа в режиме window.history

пример: 
const router = new VueRouter({
  routes: [
	{ path: '/user/:id', component: User }
  ]
})
показ: {{ $route.params.id }}

см. https://jsfiddle.net/yyx990803/xgrjzsup/
в ссылке https://fiddle.jshell.net/yyx990803/xgrjzsup/show/#/foo
окончание #/foo показывает что показать, как будто параметр url

this.$route.params - даст значение динамического сегмента

/user/:username
/user/:username/post/:post_id

отслеживание изменений в роуте:
  watch: {
	'$route' (to, from) {
	  // обрабатываем изменение параметров маршрута...
	}
  }
или хук
  beforeRouteUpdate (to, from, next) {
	// обрабатываем изменение параметров маршрута...
	// не забываем вызвать next()

path: '*' 	- все что не попало в другое
path: '/user-*' - начинается на 'user-'

если путь совпадает с несколькими маршрутами, то приоритет у первого

вложенные маршруты:
routes: [ {path:..., children:[...

children:[path:'' - пустой путь - ничего не показывать - можно использовать как стартовую страницу
--------------------
Программная навигация - 
при обычном использовании тег <router-link> добавляет пути в window.history
но это можно сделать и програмно

внутри компонента можно использовать this.$router

поэтому можно вызвать this.$router.push
используя router.push при переходе добавляется новая запись в навигацию

т.е. <router-link :to="..."> === router.push(...)

как можно искусственно добавить путь:

// строка
router.push('home')

// объект
router.push({ path: 'home' })

// именованный маршрут
router.push({ name: 'user', params: { userId: '123' } })

// со строкой запроса, получится /register?plan=private
router.push({ path: 'register', query: { plan: 'private' } })


